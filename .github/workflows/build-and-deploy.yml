name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build: 
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile

  format:
    runs-on: self-hosted
    needs: [build]

    steps:
      - run: yarn format:check

  lint:
    runs-on: self-hosted
    needs: [build]

    steps:
      - run: yarn lint

  prune:
    runs-on: self-hosted
    needs: [build]

    steps:
      - run: yarn game prune-imports
        
  make-envfile:
    environment: development
    runs-on: self-hosted
 
    steps:
    - name: Make envfile
      working-directory: ./packages/game/
      run: |
        touch .env
        echo BOT_TOKEN=${{ secrets.BOT_TOKEN }}  >> .env
        echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
        echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> .env
        echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
        echo AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }} >> .env
        echo AWS_S3_HOST=${{ secrets.AWS_S3_HOST }} >> .env
        echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
        echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
        echo COOLDOWNS_DISABLED=${{ secrets.COOLDOWNS_DISABLED }} >> .env
        echo DEV_COMMANDS=${{ secrets.DEV_COMMANDS }} >> .env
        echo GUILD_ID=${{ secrets.GUILD_ID }} >> .env
        echo PORT=${{ secrets.PORT }} >> .env
        echo REDUX_DEVTOOLS_ENABLED=${{ secrets.REDUX_DEVTOOLS_ENABLED }} >> .env

  deploy:
    runs-on: self-hosted
    needs: [build, make-envfile]

    steps:
      - name: Start or Restart Game
        run: >
          pm2 flush && DATABASE_PATH=~/.adventure-bot
          pm2 start ecosystem.config.js
