name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build: 
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn build

  format:
    runs-on: self-hosted
    needs: [build]

    steps:
      - run: yarn format:check

  lint:
    runs-on: self-hosted
    needs: [build]

    steps:
      - run: yarn lint

  prune:
    runs-on: self-hosted
    needs: [build]

    steps:
      - run: yarn game prune-imports
        

  # make-envfile:
 
  #   runs-on: self-hosted
 
  #   steps:
  #   - name: Make envfile
  #     run: >
  #       echo "BOT_TOKEN=$BOT_TOKEN" > ./packages/game/.env
  #       echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> ./packages/game/.env
  #       echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> ./packages/game/.env"
  #       echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ./packages/game/.env"
  #       echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> ./packages/game/.env"
  #       echo "AWS_S3_HOST=${{ secrets.AWS_S3_HOST }}" >> ./packages/game/.env"
  #       echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ./packages/game/.env"
  #       echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> ./packages/game/.env"
  #       echo "COOLDOWNS_DISABLED=${{ secrets.COOLDOWNS_DISABLED }}" >> ./packages/game/.env"
  #       echo "DEV_COMMANDS=${{ secrets.DEV_COMMANDS }}" >> ./packages/game/.env"
  #       echo "GUILD_ID=${{ secrets.GUILD_ID }}" >> ./packages/game/.env"
  #       echo "PORT=${{ secrets.PORT }}" >> ./packages/game/.env"
  #       echo "REDUX_DEVTOOLS_ENABLED=${{ secrets.REDUX_DEVTOOLS_ENABLED }" >> ./packages/game/.env"

  #     env:
  #       BOT_TOKEN: ${{ secrets.BOT_TOKEN }} 
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
  #       AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }} 
  #       AWS_S3_HOST: ${{ secrets.AWS_S3_HOST }} 
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
  #       CLIENT_ID: ${{ secrets.CLIENT_ID }} 
  #       COOLDOWNS_DISABLED: ${{ secrets.COOLDOWNS_DISABLED }} 
  #       DEV_COMMANDS: ${{ secrets.DEV_COMMANDS }} 
  #       GUILD_ID: ${{ secrets.GUILD_ID }} 
  #       PORT: ${{ secrets.PORT }} 
  #       REDUX_DEVTOOLS_ENABLED: ${{ secrets.REDUX_DEVTOOLS_ENABLED }}
  #       directory: ./packages/game

  deploy:
    runs-on: self-hosted
    needs: [build]

    steps:
      - name: Start or Restart Game
        run: >
          pm2 flush && DATABASE_PATH=~/.adventure-bot
          pm2 start ecosystem.config.js
