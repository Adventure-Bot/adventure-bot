name: Build and Deploy

on:
  push:
    branches: [main, fix-build] # TODO: fix-build branch, for testing only.
    
jobs:
  build: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            packages/**/.build
            ecosystem.config.js

  deploy:
    needs: [build]
    environment: production
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: game-build
          path: packages/game/.build
      - uses: actions/download-artifact@v3
        with:
          name: web-build
          path: packages/web/.next
      - name: Create .env file
        working-directory: ./packages/game/
        run: |
          touch .env
          echo "" > .env
          echo BOT_TOKEN=${{ secrets.BOT_TOKEN }}  >> .env
          echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
          echo AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }} >> .env
          echo AWS_S3_HOST=${{ secrets.AWS_S3_HOST }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
          echo COOLDOWNS_DISABLED=${{ secrets.COOLDOWNS_DISABLED }} >> .env
          echo DEV_COMMANDS=${{ secrets.DEV_COMMANDS }} >> .env
          echo GUILD_ID=${{ secrets.GUILD_ID }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo REDUX_DEVTOOLS_ENABLED=${{ secrets.REDUX_DEVTOOLS_ENABLED }} >> .env
      - name: Start
        run: >
          pm2 flush && 
          DATABASE_PATH=~/.adventure-bot 
          pm2 start
